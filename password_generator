def password_validation_blacklist():

    # These are the list of characters that are not allowed to be contained within the password 
    blacklist_password_chars = ['(', ')', '{', '}', '[', ']', '|', '`', '¬', '¦',  '"', '£', '$', '%',
                                 '^', '&', '*', '"', '<', '>', ':', ';', '#', '~', '_', '-', '+', '=', ',']

    # This will prompt the user to enter a password, setting an initial condition to check against. If any of the passwords in the user's passwords contains a character from the blacklist, then it will set the condition to be FALSE
    # The condition will be checked, if false, it will notify to the user that there are incorrect characters, else it will give the successful message and exit out of the while loop 
    while True:
        password = input("Please enter a password: ")
        condition = True
        
        for letter in password:
            if letter in blacklist_password_chars:
                condition = False 
        if condition == False:
            print("There are some characters in your password that cannot be used")
            condition = True 
            continue    
        else:
            print("Password is set")
            break
       
def password_validation_whitelist():

    # This will set a condition that will be used to check if the password does not contain numbers or alphabets
    # whitelisted passwords must contain only alphanumeric characters 
    condition = None

    # This while loop will ask for a user input, if the user enters a legitimate password, the condition will not change. Each letter is checked to see if it is an alphanumeric character
    # If it is NOT an alphanumeric character, it will set the condition to be false, and it will notify the user to enter a new password. If every checks out, then the it will give the user
    # a successful message, and break out of the while loop
      
    while True:
        password = input("Enter a password: ")

        for letter in password:
            if not letter.isalnum():
                condition = False
            
        if condition == False:
                print("Password must contain letters and numbers only")
                condition = None 
                continue
        else:
            print("Successful password!")
            break

def complex_password_generator():

    print("Welcome to the complex password generator")
    print("\t\nMake sure to have a password that is greater than 8 characters \
            \t\nContains upper and lower case letter \
            \t\nContains numbers and Special character")
    print("Special characters that can be used include: ")

    allowed_special = ("!", "$", ".", "@")
    print(allowed_special)


    while True:
        
        password = input("\nEnter a password: ")
        condition = True
        temporary_password = ""
        for letter in password:
            if letter.isalpha():
                temporary_password += letter
        upper_cases = [letter == letter.upper() for letter in temporary_password]
        lower_cases = [letter == letter.lower() for letter in temporary_password]

        if any(upper_cases) == False:
            print("\tMake sure to have some upper cases")
            condition = False
            
        if any(lower_cases) == False:
            condition = False
           
        numbers = ["0","1","2","3","4","5","6","7","8","9"]
        numbers_are_true = [] 
        for char in password:
            cond = char.isnumeric()
            numbers_are_true.append(cond)
        if any(numbers_are_true) != True:
            print("\tYou need to add some numbers")
            condition = False
            
    
        special_cases = []

        for letter in password:
            if letter.isalnum() == False:
                special_cases.append(letter)

        not_allowed = []       
        for letter in special_cases:
            if letter not in allowed_special:
                condition = False
                if letter not in not_allowed:
                    not_allowed.append(letter)
        if not_allowed:
            print("\tYou cannot have these characters: ")
            for letter in not_allowed:
                print("\t",letter)       
            
        
        if bool(special_cases) == False:
            condition = False
            print("\tAdd some special characters")
            

        
        if len(password) < 8:
            condition = False
            print("\tYou need to have a password greater than 8 characters")

        if condition == True:
            print("Your password has been set!")
            break

def choose_your_password_gen():
    different_types = [password_validation_whitelist, password_validation_blacklist, complex_password_generator]
    print("We have a whitelist, blacklist, and complex password generator")
    print("1.whitelist\n2.blacklist\n3.complex password generator")

    while True: 
        try:
            user_selection = int(input("Which one will it be 1, 2, or 3: ")) - 1
            if user_selection < 1:
                user_selection = "not valid"
            different_types[user_selection]()
            break
        except:
            print("Hmm that is not a valid input")
            

complex_password_generator()

